# 1.相关命令
1.  SAVE、BGSAVE

# 2.知识点
0.  整体分析
    1.  就是围绕着RDB文件的生成和使用来说的。
      
1.  RDB文件的生成和载入时机
    1.  受命而生成，命令是SAVE、BGSAVE
    2.  save选项与条件生成
    3.  服务器启动时，加载；没有AOF的优先级高。
    
2.  RDB文件的分析
    1.  大致结构 REDIS-version-select1-pairs-select2-pairs-...-checksum
    2.  RDB中好几个数据类型都会用到了ziplist来保存，为什么ziplist用的这么多呢？
    
3.  在执行命令时db的状态
    1.  SAVE会阻塞服务器
    2.  GBSAVE时不阻塞，但是拒绝执行SAVE、BGSAVE命令，因为调用的都是save函数，会有竞态条件的。
    3.  BGSAVE和BGREWRITEAOF不能同时执行

4.  save选项的实现
    1.  数据：server状态dirty计数器和lastsave时间戳，当然还有save配置
    2.  serveCron周期函数
    3.  无需多言
5.  

# 3.个人思考
1.  RDB中好几个数据类型都会用到了ziplist来保存，为什么ziplist用的这么多呢？
    1.  回答：因为它是压缩列表呀，可以节约空间，而且它的特点也是节省空间——内存空间和磁盘空间
    2.  它用处多，但是它不会用来保存大数据，因为那时它的效率不高，毕竟是顺序list；但是，redis中
        毕竟小而短的数据比较多，所以它用处多的。

2.  serverCron周期函数有哪些逻辑（每100毫秒执行一次）
    1.  save()
    2.
    
# 关于持久化的问题
1.  持久化后，数据丢失的风险还有吗？在哪儿？
    1.  不要费心的想如果在机器突然宕机时也不丢失数据而且还能像正常提供服务。
    2.
2.  
